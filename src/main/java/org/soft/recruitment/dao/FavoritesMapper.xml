<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="org.soft.recruitment.dao.FavoritesMapper" >
  <resultMap id="BaseResultMap" type="org.soft.recruitment.model.Favorites" >
    <id column="favorite_Id" property="favoriteId" jdbcType="INTEGER" />
    <result column="favorite_Release_Time" property="favoriteReleaseTime" jdbcType="VARCHAR" />
    <result column="job_Id" property="jobId" jdbcType="VARCHAR" />
    <result column="job_Name" property="jobName" jdbcType="VARCHAR" />
    <result column="job_Address" property="jobAddress" jdbcType="VARCHAR" />
    <result column="job_Salary" property="jobSalary" jdbcType="VARCHAR" />
    <result column="job_ER" property="jobEr" jdbcType="VARCHAR" />
    <result column="job_Education" property="jobEducation" jdbcType="VARCHAR" />
    <result column="job_Release_Time" property="jobReleaseTime" jdbcType="VARCHAR" />
    <result column="job_Type" property="jobType" jdbcType="VARCHAR" />
    <result column="company_Name" property="companyName" jdbcType="VARCHAR" />
    <result column="company_Create_Time" property="companyCreateTime" jdbcType="VARCHAR" />
    <result column="user_Real_Name" property="userRealName" jdbcType="VARCHAR" />

    <association property="job" resultMap="org.soft.recruitment.dao.JobMapper.BaseResultMap">
      <id column="job_Id" property="jobId"/>
      <result column="job_Name" property="jobName"/>
    </association>

  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    favorite_Id, favorite_Release_Time, job_Id, job_Name, job_Address, job_Salary, job_ER, 
    job_Education, job_Release_Time, job_Type, company_Name, company_Create_Time, user_Real_Name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="org.soft.recruitment.model.FavoritesExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from favorites
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from favorites
    where favorite_Id = #{favoriteId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from favorites
    where favorite_Id = #{favoriteId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="org.soft.recruitment.model.FavoritesExample" >
    delete from favorites
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="org.soft.recruitment.model.Favorites" >
    insert into favorites (favorite_Id, favorite_Release_Time, 
      job_Id, job_Name, job_Address, 
      job_Salary, job_ER, job_Education, 
      job_Release_Time, job_Type, company_Name, 
      company_Create_Time, user_Real_Name)
    values (#{favoriteId,jdbcType=INTEGER}, #{favoriteReleaseTime,jdbcType=VARCHAR}, 
      #{jobId,jdbcType=VARCHAR}, #{jobName,jdbcType=VARCHAR}, #{jobAddress,jdbcType=VARCHAR}, 
      #{jobSalary,jdbcType=VARCHAR}, #{jobEr,jdbcType=VARCHAR}, #{jobEducation,jdbcType=VARCHAR}, 
      #{jobReleaseTime,jdbcType=VARCHAR}, #{jobType,jdbcType=VARCHAR}, #{companyName,jdbcType=VARCHAR}, 
      #{companyCreateTime,jdbcType=VARCHAR}, #{userRealName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="org.soft.recruitment.model.Favorites" >
    insert into favorites
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="favoriteId != null" >
        favorite_Id,
      </if>
      <if test="favoriteReleaseTime != null" >
        favorite_Release_Time,
      </if>
      <if test="jobId != null" >
        job_Id,
      </if>
      <if test="jobName != null" >
        job_Name,
      </if>
      <if test="jobAddress != null" >
        job_Address,
      </if>
      <if test="jobSalary != null" >
        job_Salary,
      </if>
      <if test="jobEr != null" >
        job_ER,
      </if>
      <if test="jobEducation != null" >
        job_Education,
      </if>
      <if test="jobReleaseTime != null" >
        job_Release_Time,
      </if>
      <if test="jobType != null" >
        job_Type,
      </if>
      <if test="companyName != null" >
        company_Name,
      </if>
      <if test="companyCreateTime != null" >
        company_Create_Time,
      </if>
      <if test="userRealName != null" >
        user_Real_Name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="favoriteId != null" >
        #{favoriteId,jdbcType=INTEGER},
      </if>
      <if test="favoriteReleaseTime != null" >
        #{favoriteReleaseTime,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null" >
        #{jobId,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null" >
        #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobAddress != null" >
        #{jobAddress,jdbcType=VARCHAR},
      </if>
      <if test="jobSalary != null" >
        #{jobSalary,jdbcType=VARCHAR},
      </if>
      <if test="jobEr != null" >
        #{jobEr,jdbcType=VARCHAR},
      </if>
      <if test="jobEducation != null" >
        #{jobEducation,jdbcType=VARCHAR},
      </if>
      <if test="jobReleaseTime != null" >
        #{jobReleaseTime,jdbcType=VARCHAR},
      </if>
      <if test="jobType != null" >
        #{jobType,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyCreateTime != null" >
        #{companyCreateTime,jdbcType=VARCHAR},
      </if>
      <if test="userRealName != null" >
        #{userRealName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="org.soft.recruitment.model.FavoritesExample" resultType="java.lang.Integer" >
    select count(*) from favorites
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update favorites
    <set >
      <if test="record.favoriteId != null" >
        favorite_Id = #{record.favoriteId,jdbcType=INTEGER},
      </if>
      <if test="record.favoriteReleaseTime != null" >
        favorite_Release_Time = #{record.favoriteReleaseTime,jdbcType=VARCHAR},
      </if>
      <if test="record.jobId != null" >
        job_Id = #{record.jobId,jdbcType=VARCHAR},
      </if>
      <if test="record.jobName != null" >
        job_Name = #{record.jobName,jdbcType=VARCHAR},
      </if>
      <if test="record.jobAddress != null" >
        job_Address = #{record.jobAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.jobSalary != null" >
        job_Salary = #{record.jobSalary,jdbcType=VARCHAR},
      </if>
      <if test="record.jobEr != null" >
        job_ER = #{record.jobEr,jdbcType=VARCHAR},
      </if>
      <if test="record.jobEducation != null" >
        job_Education = #{record.jobEducation,jdbcType=VARCHAR},
      </if>
      <if test="record.jobReleaseTime != null" >
        job_Release_Time = #{record.jobReleaseTime,jdbcType=VARCHAR},
      </if>
      <if test="record.jobType != null" >
        job_Type = #{record.jobType,jdbcType=VARCHAR},
      </if>
      <if test="record.companyName != null" >
        company_Name = #{record.companyName,jdbcType=VARCHAR},
      </if>
      <if test="record.companyCreateTime != null" >
        company_Create_Time = #{record.companyCreateTime,jdbcType=VARCHAR},
      </if>
      <if test="record.userRealName != null" >
        user_Real_Name = #{record.userRealName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update favorites
    set favorite_Id = #{record.favoriteId,jdbcType=INTEGER},
      favorite_Release_Time = #{record.favoriteReleaseTime,jdbcType=VARCHAR},
      job_Id = #{record.jobId,jdbcType=VARCHAR},
      job_Name = #{record.jobName,jdbcType=VARCHAR},
      job_Address = #{record.jobAddress,jdbcType=VARCHAR},
      job_Salary = #{record.jobSalary,jdbcType=VARCHAR},
      job_ER = #{record.jobEr,jdbcType=VARCHAR},
      job_Education = #{record.jobEducation,jdbcType=VARCHAR},
      job_Release_Time = #{record.jobReleaseTime,jdbcType=VARCHAR},
      job_Type = #{record.jobType,jdbcType=VARCHAR},
      company_Name = #{record.companyName,jdbcType=VARCHAR},
      company_Create_Time = #{record.companyCreateTime,jdbcType=VARCHAR},
      user_Real_Name = #{record.userRealName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="org.soft.recruitment.model.Favorites" >
    update favorites
    <set >
      <if test="favoriteReleaseTime != null" >
        favorite_Release_Time = #{favoriteReleaseTime,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null" >
        job_Id = #{jobId,jdbcType=VARCHAR},
      </if>
      <if test="jobName != null" >
        job_Name = #{jobName,jdbcType=VARCHAR},
      </if>
      <if test="jobAddress != null" >
        job_Address = #{jobAddress,jdbcType=VARCHAR},
      </if>
      <if test="jobSalary != null" >
        job_Salary = #{jobSalary,jdbcType=VARCHAR},
      </if>
      <if test="jobEr != null" >
        job_ER = #{jobEr,jdbcType=VARCHAR},
      </if>
      <if test="jobEducation != null" >
        job_Education = #{jobEducation,jdbcType=VARCHAR},
      </if>
      <if test="jobReleaseTime != null" >
        job_Release_Time = #{jobReleaseTime,jdbcType=VARCHAR},
      </if>
      <if test="jobType != null" >
        job_Type = #{jobType,jdbcType=VARCHAR},
      </if>
      <if test="companyName != null" >
        company_Name = #{companyName,jdbcType=VARCHAR},
      </if>
      <if test="companyCreateTime != null" >
        company_Create_Time = #{companyCreateTime,jdbcType=VARCHAR},
      </if>
      <if test="userRealName != null" >
        user_Real_Name = #{userRealName,jdbcType=VARCHAR},
      </if>
    </set>
    where favorite_Id = #{favoriteId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.soft.recruitment.model.Favorites" >
    update favorites
    set favorite_Release_Time = #{favoriteReleaseTime,jdbcType=VARCHAR},
      job_Id = #{jobId,jdbcType=VARCHAR},
      job_Name = #{jobName,jdbcType=VARCHAR},
      job_Address = #{jobAddress,jdbcType=VARCHAR},
      job_Salary = #{jobSalary,jdbcType=VARCHAR},
      job_ER = #{jobEr,jdbcType=VARCHAR},
      job_Education = #{jobEducation,jdbcType=VARCHAR},
      job_Release_Time = #{jobReleaseTime,jdbcType=VARCHAR},
      job_Type = #{jobType,jdbcType=VARCHAR},
      company_Name = #{companyName,jdbcType=VARCHAR},
      company_Create_Time = #{companyCreateTime,jdbcType=VARCHAR},
      user_Real_Name = #{userRealName,jdbcType=VARCHAR}
    where favorite_Id = #{favoriteId,jdbcType=INTEGER}
  </update>

  <select id="findAllFavorites" parameterType="java.util.Map" resultMap="BaseResultMap">
    select
    fav.favorite_Id,
    fav.favorite_Release_Time,
    fav.job_Id,
    fav.job_Name,
    fav.job_Address,
    fav.job_Salary,
    fav.job_ER,
    fav.job_Education,
    fav.job_ReleaseTime,
    fav.job_Type,
    fav.company_Name,
    fav.company_Create_Time,
    fav.user_Real_Name,
    j.job_Id,

    from favorites fav
    inner join job j
    on fav.job_Id=j.job_Id
</select>
</mapper>